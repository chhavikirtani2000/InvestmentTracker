package com.example.demo;

import java.util.ArrayList;
import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.CrossOrigin;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RestController;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;


@RestController
@RequestMapping("/api")
@CrossOrigin
public class UserController {
    
    @Autowired
    private UserService service;
    
    @Autowired
    private UserRepository userRepository;
    
    ResponseEntity<?> response;
    boolean flag;
    
    @PostMapping("/")
    public ResponseEntity<?> addMobile(@RequestBody User userdata){
        
        flag= service.addUserData(userdata);
        
        if(flag) {
            response= new ResponseEntity<String>("User Data is added", HttpStatus.CREATED);
        }else {
            response= new ResponseEntity<String>("Failure", HttpStatus.BAD_REQUEST);
        }
        return response;
    }
    
    @GetMapping("/")
    public List<User> GetUsers() {
          return service.findUser();
      }
    
    @GetMapping("/{id}")
     public User GetUser(@PathVariable String id) {
          return service.findUserById(id);
      }
    
    @PutMapping("/")
  public User PutMapping(@RequestBody User newUser) {
      User oldUser = userRepository.findById(newUser.getId()).orElse(null);
      System.out.println(newUser.getMarketwatchList());
      List<List<String> > arr=oldUser.getMarketwatchList();
      arr.add(newUser.getMarketwatchList().get(0));
      //arr.push(newUser.getMarketwatchList())
      oldUser.setMarketwatchList(arr);
      userRepository.save(oldUser);
      return oldUser;
  }
    
//    @Autowired
//    private UserRepository userRepository;
//
//    @GetMapping("/")
//    public List<User> GetUsers() {
//        return userRepository.findAll();
//    }
//    @GetMapping("/{id}")
//    public User GetUser(@PathVariable String id) {
//        return userRepository.findById(id).orElse(null);
//    }
//    @PutMapping("/stocks/")
//    public User PutUserStocks(@RequestBody User newUser) {
//        User oldUser = userRepository.findById(newUser.getId()).orElse(null);
//        List<String> oldStocks=oldUser.getStocks();
//        if(oldStocks==null)
//            oldStocks=new ArrayList<String>();
//        oldStocks.add(newUser.getStocks().get(0));
//        oldUser.setStocks(oldStocks);
//        userRepository.save(oldUser);
//        return oldUser;
//    }
//    @PostMapping("/")
//    public User postMethodName(@RequestBody User user) {
//        return userRepository.save(user);
//    }
//    @PutMapping("/")
//    public User PutMapping(@RequestBody User newUser) {
//        User oldUser = userRepository.findById(newUser.getId()).orElse(null);
//        oldUser.setName(newUser.getName());
//        oldUser.setEmail(newUser.getEmail());
//        oldUser.setPassword(newUser.getPassword());
//        oldUser.setStocks(newUser.getStocks());
//        userRepository.save(oldUser);
//        return oldUser;
//    }
//    @DeleteMapping("/{id}")
//    public String DeleteUser(@PathVariable String id) {
//        userRepository.deleteById(id);
//        return id;
//    }
}
